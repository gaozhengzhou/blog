pipeline {
    agent any

    environment {
        ENVIRONMENT = 'test'
        K8S_KUBE_CONFIG = "${KUBE_CREDENTIALS_HOME}/t_alik8s_config"
        K8S_NAMESPACE = 'ldx'
        PROJECT_NAME = 'ucs'
        K8S_DEPLOYMENT_YML = "${ENVIRONMENT}/${PROJECT_NAME}/kube/${PROJECT_NAME}.yml"
    }

    stages {
        stage('Update K8S Deployment') {
            steps {
                echo 'Updating..'
                echo "${K8S_DEPLOYMENT_YML}"
                sh '''
                    set +eu
                    REDIS_IMAGE_URL=$(redis-cli -h ${JENKINS_REDIS_HOST} hget jenkins:${ENVIRONMENT}:${K8S_NAMESPACE} ${PROJECT_NAME})
                    K8S_IMAGE_URL=$(kubectl --kubeconfig=${K8S_KUBE_CONFIG} get deploy ${PROJECT_NAME} -n ${K8S_NAMESPACE} -o jsonpath='{..image}')
                    set -eux
                    if [[ "${REDIS_IMAGE_URL}" != "" ]]
                    then
                        sed -i s#image:\\ .*#image:\\ ${REDIS_IMAGE_URL}#g ${K8S_DEPLOYMENT_YML}
                    elif [[ "${K8S_IMAGE_URL}" != "" ]] 
                    then
                        sed -i s#image:\\ .*#image:\\ ${K8S_IMAGE_URL}#g ${K8S_DEPLOYMENT_YML}
                    fi
                    cat ${K8S_DEPLOYMENT_YML}
                    kubectl --kubeconfig=${K8S_KUBE_CONFIG} apply -f - < ${K8S_DEPLOYMENT_YML}
                 '''
            }
        }
    }
}
